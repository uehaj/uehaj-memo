{"componentChunkName":"component---src-templates-blog-post-tsx","path":"/uehaj-memo/0e0e7979b7e2b19e55f5/","result":{"data":{"site":{"siteMetadata":{"title":"Gatsby Starter Blog Grommet v2","author":"Ivan Ganev"}},"markdownRemark":{"id":"ac1cf251-1c48-5476-9a74-ff5258ccffe3","excerpt":"第12回 オフラインリアルタイムどう書くの参考問題「道なりの亀」を、JVM上で動作するHaskellライクな言語Frege(フレーゲ)で解きました。","html":"<p><a href=\"http://qiita.com/Nabetani/items/1de39df381dfeee305ab\">第12回 オフラインリアルタイムどう書くの参考問題「道なりの亀」</a>を、JVM上で動作するHaskellライクな言語<a href=\"https://github.com/Frege/frege/wiki/_pages\">Frege</a>(フレーゲ)で解きました。</p>\n<pre><code class=\"language-frege:turtle.fr\">package sample.Turtle where\n\ntype Position = Char\ntype Direction = Char\ntype Command = Char\n\npure native elemIndex indexOf :: String -> Int -> Int\n\newData :: String\newData = \"?\"++packed ['A'..'K']++\"?\"++packed ['L'..'V']++\"?\"++packed ['W'..'Z']++packed ['a'..'g']++\"?\"\n         ++\"?hij?klm?nop?qrs?tuv?wxy?z01?234?567?\"\n\nnsData :: String\nnsData = \"?\"++\"ALWhknqtwz25\"++\"?\"++\"BMXilorux036\"++\"?\"++\"CNYjmpsvy147\"\n         ++ \"?\" ++\"DOZ\" ++ \"?\" ++ \"EPa\" ++ \"?\" ++ \"FQb\" ++ \"?\" ++ \"GRc\" ++ \"?\" ++ \"HSd\"\n         ++ \"?\" ++ \"ITe\" ++ \"?\" ++ \"JUf\" ++ \"?\" ++ \"KVg\" ++ \"?\"\n\nmoveForward :: (Position, Direction, [Char]) -> Int -> (Position, Direction, [Char])\nmoveForward (pos, dir, hist) 0 = (pos, dir, hist)\nmoveForward ('7', 'S', hist) n = moveForward ('e', 'N', hist++['e']) (n-1)\nmoveForward ('6', 'S', hist) n = moveForward ('f', 'N', hist++['f']) (n-1)\nmoveForward ('5', 'S', hist) n = moveForward ('g', 'N', hist++['g']) (n-1)\nmoveForward ('e', 'S', hist) n = moveForward ('7', 'N', hist++['7']) (n-1)\nmoveForward ('f', 'S', hist) n = moveForward ('6', 'N', hist++['6']) (n-1)\nmoveForward ('g', 'S', hist) n = moveForward ('5', 'N', hist++['5']) (n-1)\nmoveForward (pos, dir, hist) n = moveForward nextState (n-1)\n    where\n          nextState :: (Char, Char, [Char])\n          nextState = (nextPos, dir, hist++(nextPos:[]))\n          nextPos :: Char\n          nextPos = case dir of\n                      'N' -> nextPosOf pos nsData (subtract 1)\n                      'W' -> nextPosOf pos ewData (subtract 1)\n                      'S' -> nextPosOf pos nsData (+1)\n                      'E' -> nextPosOf pos ewData (+1)\n          nextPosOf :: Char -> String -> (Int -> Int) -> Char\n          nextPosOf c map f = let i=map `elemIndex` (ord c) in if (i/=0) then ((unpacked map) !! (f i)) else '?'\n\nturnDir :: Direction -> String -> Position -> [Char] -> State (Position, Direction, [Char]) ()\nturnDir dir dirs pos hist = State.put (pos, (let x=(dirs `elemIndex` (ord dir)) in ((unpacked dirs) !! (x+1))), hist)\n\noneStep :: Command -> State (Position, Direction, [Char]) ()\noneStep ch = do\n  (pos, dir, hist) &#x3C;- State.get\n  case ch of\n    'L' -> turnDir dir \"ENWSE\" pos hist\n    'R' -> turnDir dir \"ESWNE\" pos hist\n    _\n          | ch `elem` ['1'..'9'] -> State.put (moveForward (pos, dir, hist) (ord ch-ord '0'))\n          | ch `elem` ['a'..'f'] -> State.put (moveForward (pos, dir, hist) ((ord ch-ord 'a')+10))\n\nsolve :: [Command] -> [Position]\nsolve cmd = reduce hist\n        where (_,_,hist) = (let (v,s) = State.run (mapM_ oneStep cmd) initialState in s)\n              reduce [] = []\n              reduce (xs:'?':_) = xs:(unpacked \"?\")\n              reduce (x:xs) = x:(reduce xs)\n              initialState = ('A','E',(unpacked \"A\"))\n\ntest cmd expected = do\n    let result = packed $ solve (unpacked cmd)\n    println $ result == expected\n\nmain args = do\n    test \"2RcL3LL22\" \"ABCNYjmpsvy147edcbcdef\"  {- 0 -}\n    test \"L3R4L5RR5R3L5\" \"A?\"  {- 1 -}\n    test \"2ReLLe\" \"ABCNYjmpsvy147eTITe741yvspmjYNC\"  {- 2 -}\n    test \"1ReRRe\" \"ABMXilorux036fUJUf630xuroliXMB\"  {- 3 -}\n    test \"ReRRe\" \"ALWhknqtwz25gVKVg52zwtqnkhWLA\"  {- 4 -}\n    test \"f\" \"ABCDEFGHIJK?\"  {- 5 -}\n    test \"Rf\" \"ALWhknqtwz25gVK?\"  {- 6 -}\n    test \"1Rf\" \"ABMXilorux036fUJ?\"  {- 7 -}\n    test \"2Rf\" \"ABCNYjmpsvy147eTI?\"  {- 8 -}\n    test \"aR1RaL1LaR1R2L1L2\" \"ABCDEFGHIJKVUTSRQPONMLWXYZabcdefg567432\"  {- 9 -}\n    test \"2R1R2L1L2R1R2L1L2R1R2L1L2R1R2L1L2\" \"ABCNMLWXYjihklmponqrsvutwxy\"  {- 10 -}\n    test \"2R4R2L4L2R4R2L4L2R4R2L4L2\" \"ABCNYjmlknqtwxy147efgVK?\"  {- 11 -}\n    test \"R1L2R4R2L4L2R4R2L4L2R4R2L4L2\" \"ALMNYjmponqtwz0147eTUVK?\"  {- 12 -}\n    test \"R2L2R4R2L4L2R4R2L4L2R4R2L4L2\" \"ALWXYjmpsrqtwz2347eTIJK?\"  {- 13 -}\n    test \"R3L2R4R2L4L2R4R2L4L2R4R2L4L2\" \"ALWhijmpsvutwz2567eTI?\"  {- 14 -}\n    test \"R5L2L5L1LaR1L4L5\" \"ALWhknopmjYNCBMXilorux0325gVKJIHGF\"  {- 15 -}\n    test \"1R2L4L2R4R2L4L2R4\" \"ABMXYZabQFGHIJUfg?\"  {- 16 -}\n    test \"2R2L4L2R4R2L4L2R4\" \"ABCNYZabcRGHIJKVg?\"  {- 17 -}\n    test \"3R2L4L2R4R2L4L2R4\" \"ABCDOZabcdSHIJK?\"  {- 18 -}\n    test \"4R2L4L2R4R2L4L2R4\" \"ABCDEPabcdeTIJK?\"  {- 19 -}\n    test \"5R2L4L2R4R2L4L2R4\" \"ABCDEFQbcdefUJK?\"  {- 20 -}\n    test \"LLL1RRR1LLL1RRR2R1\" \"ALMXYZ?\"  {- 21 -}\n    test \"R3RRR3\" \"ALWhij?\"  {- 22 -}\n    test \"1LLL4RRR1LR1RL1\" \"ABMXilm?\"  {- 23 -}\n    test \"R2L1R2L1R3R4\" \"ALWXilmpsvut?\"  {- 24 -}\n    test \"7R4f47LLLc6R9L\" \"ABCDEFGHSd?\"  {- 25 -}\n    test \"5RR868L8448LL4R6\" \"ABCDEFEDCBA?\"  {- 26 -}\n    test \"42Rd1RLLa7L5\" \"ABCDEFGRc?\"  {- 27 -}\n    test \"RRLL6RLR1L5d12LaLRRL529L\" \"ABCDEFGRSTUV?\"  {- 28 -}\n    test \"RLR7L6LL1LRRRcRL52R\" \"ALWhknqtuv?\"  {- 29 -}\n    test \"1RLR8RLR1R437L99636R\" \"ABMXiloruxwtqnkhWLA?\"  {- 30 -}\n    test \"LLL2L3La9Le5LRR\" \"ALWXYZOD?\"  {- 31 -}\n    test \"R1LcRR491\" \"ALMNOPQRSTUV?\"  {- 32 -}\n    test \"R8L1R1R512L8RLLReRf\" \"ALWhknqtwx0z?\"  {- 33 -}\n    test \"1RcL8f1L29a5\" \"ABMXilorux036fedcbaZYXW?\"  {- 34 -}\n    test \"R822LeL46LL39LL\" \"ALWhknqtwz25gfedcbaZYXW?\"  {- 35 -}\n    test \"9R3L5LRRLb5R3L7cLLLR4L\" \"ABCDEFGHIJUf65?\"  {- 36 -}\n    test \"7LLRRR2R3R69Lf76eR2L\" \"ABCDEFGHSdcbaPE?\"  {- 37 -}\n    test \"8RRRLL3Le\" \"ABCDEFGHITe765?\"  {- 38 -}\n    test \"8R5RLL6LbL4LL5bL\" \"ABCDEFGHITe7410z?\"  {- 39 -}\n    test \"6LR2R1LR5LRLRL484L63\" \"ABCDEFGHITe741yxw?\"         {- 40 -}\n\n  \n</code></pre>","frontmatter":{"title":"第12回オフラインリアルタイムどう書くの参考問題をFregeで解く","date":"February 20, 2020","cover":null}}},"pageContext":{"slug":"/uehaj-memo/0e0e7979b7e2b19e55f5/","previous":{"fields":{"slug":"/uehaj-memo/036e17f54cf623cee1a6/"},"frontmatter":{"title":"【React+TypeScript】Function Componentで省略可能propsの省略した場合の値を型安全に指定する"}},"next":null}}}