{"componentChunkName":"component---src-templates-blog-post-tsx","path":"/blog/036e17f54cf623cee1a6/","result":{"data":{"site":{"siteMetadata":{"title":"Gatsby Starter Blog Grommet v2","author":"Ivan Ganev"}},"markdownRemark":{"id":"1bca7571-d85f-5915-8f7f-782a0de8f08b","excerpt":"https://github.com/microsoft/TypeScript/issues/27425#issuecomment-478004521 こんな問題がありますが、結論としては、回避策として「名前のついた型を指定しない」のが楽です。 リンク先から引用。","html":"<p><a href=\"https://github.com/microsoft/TypeScript/issues/27425#issuecomment-478004521\">https://github.com/microsoft/TypeScript/issues/27425#issuecomment-478004521</a></p>\n<p>こんな問題がありますが、結論としては、回避策として「名前のついた型を指定しない」のが楽です。</p>\n<p>リンク先から引用。</p>\n<pre><code class=\"language-javascript\">const MyComponent = (props: { name: string, telephone: string }) => {\n  ...\n}\n\nMyComponent.defaultProps = { telephone: \"222-333-4444\" }\n\n// Works - good\nconst test = &#x3C;MyComponent name=\"Hulk Hogan\" />\n\n// Doesn't work - missing name, good\nconst test = &#x3C;MyComponent />\n</code></pre>","frontmatter":{"title":"【React+TypeScript】Function Componentで省略可能propsの省略した場合の値を型安全に指定する","date":"February 20, 2020","cover":null}}},"pageContext":{"slug":"/blog/036e17f54cf623cee1a6/","previous":{"fields":{"slug":"/blog/25caa06ce666fc175d99/"},"frontmatter":{"title":"第27回 オフラインリアルタイムどう書くの問題「分岐と行き止まり」をRustで解く"}},"next":{"fields":{"slug":"/blog/1ac71855d05132d54eb8/"},"frontmatter":{"title":"TAPLのML実装をRustでやってみるシリーズ「4章 算術式のML実装」"}}}}}