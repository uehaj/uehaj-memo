{"version":3,"sources":["webpack:///./node_modules/grommet-icons/es6/icons/Previous.js","webpack:///./node_modules/grommet-icons/es6/icons/Next.js","webpack:///./src/templates/blog-post.tsx"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","props","createElement","StyledIcon","viewBox","a11yTitle","fill","stroke","strokeWidth","points","transform","pageQuery","blogPost","data","pageContext","previous","next","post","markdownRemark","siteTitle","site","siteMetadata","title","siteDescription","excerpt","Layout","Box","round","margin","htmlAttributes","lang","meta","name","content","frontmatter","cover","size","overflow","basis","Image","fit","alt","src","childImageSharp","fluid","pad","horizontal","Heading","top","bottom","level","Text","date","dangerouslySetInnerHTML","__html","html","direction","justify","gap","Button","onClick","navigate","fields","slug","icon","label","hoverIndicator","reverse"],"mappings":"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","file":"component---src-templates-blog-post-tsx-99185ea61b7c1db80950.js","sourcesContent":["import \"core-js/modules/es6.object.assign\";\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport React from 'react';\nimport { StyledIcon } from '../StyledIcon';\nexport var Previous = function Previous(props) {\n  return React.createElement(StyledIcon, _extends({\n    viewBox: \"0 0 24 24\",\n    a11yTitle: \"Previous\"\n  }, props), React.createElement(\"polyline\", {\n    fill: \"none\",\n    stroke: \"#000\",\n    strokeWidth: \"2\",\n    points: \"7 2 17 12 7 22\",\n    transform: \"matrix(-1 0 0 1 24 0)\"\n  }));\n};","import \"core-js/modules/es6.object.assign\";\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport React from 'react';\nimport { StyledIcon } from '../StyledIcon';\nexport var Next = function Next(props) {\n  return React.createElement(StyledIcon, _extends({\n    viewBox: \"0 0 24 24\",\n    a11yTitle: \"Next\"\n  }, props), React.createElement(\"polyline\", {\n    fill: \"none\",\n    stroke: \"#000\",\n    strokeWidth: \"2\",\n    points: \"7 2 17 12 7 22\"\n  }));\n};","import { navigate, graphql } from 'gatsby';\nimport { Box, Button, Heading, Image, Text } from 'grommet';\nimport { Next as NextIcon, Previous as PreviousIcon } from 'grommet-icons';\nimport * as _ from 'lodash/fp';\nimport * as React from 'react';\nimport Helmet from 'react-helmet';\n\nimport Layout from '../components/Layout';\n\ninterface BlogPostProps {\n  data: {\n    markdownRemark: {\n      excerpt: string;\n      frontmatter: {\n        title: string;\n        cover?: {\n          childImageSharp: { fluid: { src: string } };\n        };\n        date?: string;\n      };\n      html: string;\n    };\n    site: {\n      siteMetadata: {\n        title: string;\n      };\n    };\n  };\n  pageContext: {\n    previous: any;\n    next: any;\n  };\n}\n\nconst blogPost = ({ data, pageContext: { previous, next } }: BlogPostProps) => {\n  const post = data.markdownRemark;\n  const siteTitle = data.site.siteMetadata.title;\n  const siteDescription = post.excerpt;\n  return (\n    <Layout>\n      <div>\n        <article>\n          <Box round=\"small\" margin=\"small\">\n            <Helmet\n              htmlAttributes={{ lang: 'en' }}\n              meta={[{ name: 'description', content: siteDescription }]}\n              title={post.frontmatter.title + '|' + siteTitle}\n            />\n            <div>\n              <header>\n                {post.frontmatter.cover ? (\n                  <Box round={{ size: 'small' }} overflow=\"hidden\">\n                    <Box basis=\"medium\" fill={true}>\n                      <Image\n                        fit=\"cover\"\n                        title={post.frontmatter.title}\n                        alt={post.frontmatter.title}\n                        src={post.frontmatter.cover.childImageSharp.fluid.src}\n                      />\n                    </Box>\n                  </Box>\n                ) : (\n                  ''\n                )}\n\n                <Box pad={{ horizontal: 'medium' }}>\n                  <Heading\n                    margin={{ top: 'large', bottom: 'small' }}\n                    level=\"1\"\n                  >\n                    {post.frontmatter.title}\n                  </Heading>\n                  <Text margin={{ bottom: 'small' }}>\n                    {post.frontmatter.date}\n                  </Text>\n                </Box>\n              </header>\n            </div>\n            <Box pad={{ horizontal: 'medium' }}>\n              <div dangerouslySetInnerHTML={{ __html: post.html }} />\n            </Box>\n          </Box>\n        </article>\n        <aside>\n          <Box direction=\"row\" justify=\"center\" gap=\"large\" margin=\"large\">\n            {previous && (\n              <Button\n                onClick={() => navigate(previous.fields.slug)}\n                icon={<PreviousIcon />}\n                label=\"Previous\"\n                hoverIndicator\n              />\n            )}\n\n            {next && (\n              <Button\n                onClick={() => navigate(next.fields.slug)}\n                icon={<NextIcon />}\n                label=\"Next\"\n                reverse={true}\n                hoverIndicator\n              />\n            )}\n          </Box>\n        </aside>\n      </div>\n    </Layout>\n  );\n};\n\nexport default blogPost;\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n        author\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        cover {\n          childImageSharp {\n            fluid(maxWidth: 1024) {\n              src\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}